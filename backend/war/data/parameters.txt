new game
  params:
    w: <num_white_cards>
    b1: <num_black_cards_1_slot>
    b2: <num_black_cards_2_slots>  // optional
    b3: <num_black_cards_3_slots>  // optional

  response {
    gameid: string
  }

register player
  params:
    gameid: <gameid>
    action=register
    name=<name>
    type={web,mobile,android} // rando not yet supported
    watcher={true,false}
  
  response {
    playerid: string
    channel : string
  }
  
start game
  params:
    gameid=<gameid>
    action=start
    playerid=<owner's pid>
    
    
  response: empty    
    
make selection
  params:
    gameid=<gameid>
    action=move
    playerid=<pid>     
    cards=<comma-separated ints>
    
  response: empty      
  
vote
  params:
    gameid=<gameid>
    action=vote
    playerid=<pid>     
    vote=int          // id of chosen selection
    
  response: empty
  
get game configuration
  params:
    gameid=<gameid>
    action=getconfig
    
  response {
    cardsPerHand: int
    voteMode: {"VOTE", "JUDGE"}
    swapAllowed: bool
    passAllowed: bool
    players: [ {
      name: string
      type: {"WEB", "MOBILE", "RANDO"}
      passive: bool
      owner: bool // first to register is owner
    } ]  
 
 get round information
   params:
     gameid=<gameid>
     action=getround
     
   response {
     round: int  // round number
     phase: {"SELECTION" , "VOTING", "ROUND_DONE"}
     blackCard: int
     moved: [ string ] // names of players who have moved
     voted: [ string ] // names of players who have voted
     numPlayers: int // total number of players in the game
   }
     
 get player channel
  params:
     gameid=<gameid>
     playerid=<pid>
     action=getchannel
     
   response {
     channel : string
   }
  
  
 get player hand
   params:
     gameid=<gameid>
     playerid=<pid>
     action=gethand
     
   response {
     black: int
     numExpected: int  // number of cards expected in response
     white: [int]
   }  
 
 get player vote selection
   params:
     gameid=<gameid>
     playerid=<pid>
     action=getvote
   
   response {
     black: int
     answers: [ { id: int, cards: [int] } ]
   }
   
 get historic (completed) round
   params:
     gameid=<gameid>
     action=gethistory
     round=int
   
   response {
     black: int
     answers: [ cards : [int] ]
     winner: int // index into the array
     name: string
   }